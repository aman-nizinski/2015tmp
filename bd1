/* 1 */

static void Main(string[] args)
{
  using (var db = new BlogContext())
  {
    Console.Write("Enter a name for a new blog:");
    var name = Console.ReadLine();
    var blog = new Blog { Name = name };
    db.Blogs.Add(blog);
    db.SaveChanges();
    var query =
      from b in db.Blogs
      orderby b.Name descending
      select b;
    foreach (var item in query)
    {
      Console.WriteLine(item.Name);
    }
  }
}

public class Blog
{
  public int BlogId { get; set; }
  public string Name { get; set; }
  
  public List<Post> Posts { get; set; }
}

public class Post
{
  public int PostId { get; set; }
  public string Title { get; set; }
  public string Content { get; set; }
  
  public int BlogId { get; set; }
}

public class BlogContext : DBContext
{
  public DbSet<Blog> Blogs { get; set; }
  public DbSet<Post> Posts { get; set; }
}


// virtual -> lazy loading
// Configuration.cs -> seed

/* 2 */

  public string Url { get; set; }

/* 3 */

public class User
{
  public String UserName { get; set; }
  public String Description { get; set; }
}

DbSet<User> Users { get; set; }

[Key] // using System.ComponentModel.DataAnnotation

/* 4 */

protected override void OnModelCreating(DbModelBuilder modelBuilder)
{
  modelBuilder.Entity<User>()
    .Property(u => u.Description)
    .HasColumnName("DetailedDescription")
}
